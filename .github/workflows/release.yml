name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: simple

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Necessary to retrieve the latest tag name
          # MinVer will search for the latest tag to determine the new version
          fetch-depth: 0

      - name: Initialization
        uses: ./.github/actions/init
        with:
          thunderstore-client: true

      - name: Build
        run: dotnet build
        env:
          BuildThunderstorePackage: true
          BuildNugetPackage: true

      - name: Publish to Thunderstore
        run: tcli publish --config-path thunderstore.toml --file build/*.zip
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.THUNDERSTORE_AUTH_TOKEN }}

      - name: Upload artifact
        run: gh release upload ${{ needs.release.outputs.tag_name }} build/*.zip AdvancedTerminalAPI/bin/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add NuGet Package Source GitHub
        shell: bash
        run: dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      
      - name: Publish to GitHub Packages
        run: dotnet nuget push AdvancedTerminalAPI/bin/*.nupkg --source "github"
